name: Build_and_Deploy_image

on:
  push:

env:
  PLATFORMS: "linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6"

jobs:
  update_config_build_and_deploy:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Get branch name
        id: branch
        shell: bash
        run: |
          BRANCH=$(echo ${GITHUB_REF} | sed -e "s/.*\///g")
          echo "::set-output name=branch::${BRANCH}"
          echo "Action branch=${BRANCH}"

      - name: Get build date
        id: date
        shell: bash
        run: |
          DATE=$(date +%F_%H-%M-%S)
          echo "::set-output name=date::${DATE}"
          echo "Build date=${DATE}"

      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.4.1

      - name: Build and push latest
        if: (steps.branch.outputs.branch == 'main') ||
            (steps.branch.outputs.branch == 'master')
        uses: docker/build-push-action@v2.5.0
        with:
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ${{ github.repository }}:latest-${{ steps.date.outputs.date }}
            ghcr.io/${{ github.repository }}:latest-${{ steps.date.outputs.date }}
            ${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:latest

      - name: Run Snyk to check Docker latest image for vulnerabilities
        if: (steps.branch.outputs.branch == 'main') ||
            (steps.branch.outputs.branch == 'master')
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: '${{ github.repository }}:latest'
          args: --file=Dockerfile

      - name: Build and push branch
        if: (steps.branch.outputs.branch != 'main') &&
            (steps.branch.outputs.branch != 'master')
        uses: docker/build-push-action@v2.5.0
        with:
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.branch.outputs.branch }}
            ${{ github.repository }}:${{ steps.branch.outputs.branch }}

      - name: Run Snyk to check Docker branch image for vulnerabilities
        if: (steps.branch.outputs.branch != 'main') &&
            (steps.branch.outputs.branch != 'master')
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: '${{ github.repository }}:${{ steps.branch.outputs.branch }}'
          args: --file=Dockerfile

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

      - name: Update repo description
        if: (steps.branch.outputs.branch == 'main') ||
            (steps.branch.outputs.branch == 'master')
        uses: peter-evans/dockerhub-description@v2.4.3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ github.repository }}
          short-description: ${{ github.event.repository.description }}
