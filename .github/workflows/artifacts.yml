name: CI_CD_Task

on: [push]

env:
  CONFIG_FILE: settings.conf
  OLD_DUPLICACY_VERSION: ""
  OLD_S6_OVERLAY_VERSION: ""
  NEW_DUPLICACY_VERSION: ""
  NEW_S6_OVERLAY_VERSION: ""
  GIT_BRANCH: ""

jobs:
  update_config_file:
    name: Get current version of duplicacy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get branch name
        id: git
        run: |
          NAME=$(echo ${GITHUB_REF} | sed -e "s/.*\///g")
          echo "GIT_BRANCH=$NAME" >> $GITHUB_ENV

      - name: Read config file
        shell: bash
        run: |
          github_repo_latest_tag()
          {
              local repo=$1
              echo $(curl -Ls https://api.github.com/repos/$repo/tags | awk -F'"' '/name.*v[0-9]/ {print $4; exit}')
          }
          github_repo_latest_version()
          {
              local repo=$1
              local latest_tag=$(github_repo_latest_tag $repo)
              local version="${latest_tag:1}"
              echo $version
          }

          source ${{ env.CONFIG_FILE }}

          echo "OLD_DUPLICACY_VERSION=$DUPLICACY_VERSION" >> $GITHUB_ENV
          echo "OLD_S6_OVERLAY_VERSION=$S6_OVERLAY_VERSION" >> $GITHUB_ENV

          echo "NEW_DUPLICACY_VERSION=$(github_repo_latest_version gilbertchen/duplicacy)" >> $GITHUB_ENV
          echo "NEW_S6_OVERLAY_VERSION=$(github_repo_latest_version just-containers/s6-overlay)" >> $GITHUB_ENV

      - name: Update duplicacy version in config
        if: ${{ env.OLD_DUPLICACY_VERSION != env.NEW_DUPLICACY_VERSION }}
        shell: bash
        run: |
          echo DUPLICACY_VERSION=${{ env.NEW_DUPLICACY_VERSION }} | tee ${{ env.CONFIG_FILE }}
          echo S6_OVERLAY_VERSION=${{ env.OLD_S6_OVERLAY_VERSION }} | tee -a ${{ env.CONFIG_FILE }}

      - name: Commit changes, Bump duplicacy to version ${{ env.NEW_DUPLICACY_VERSION }}
        if: ${{ env.OLD_DUPLICACY_VERSION != env.NEW_DUPLICACY_VERSION }}
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'Bump duplicacy to version ${{ env.NEW_DUPLICACY_VERSION }}'
          add: '${{ env.CONFIG_FILE }}'

      - name: Update s6 overlay version in config
        if: ${{ env.OLD_S6_OVERLAY_VERSION != env.NEW_S6_OVERLAY_VERSION }}
        shell: bash
        run: |
          echo DUPLICACY_VERSION=${{ env.NEW_DUPLICACY_VERSION }} | tee ${{ env.CONFIG_FILE }}
          echo S6_OVERLAY_VERSION=${{ env.NEW_S6_OVERLAY_VERSION }} | tee -a ${{ env.CONFIG_FILE }}

      - name: Commit changes, Bump s6 overlay to version ${{ env.NEW_S6_OVERLAY_VERSION }}
        if: ${{ env.OLD_S6_OVERLAY_VERSION != env.NEW_S6_OVERLAY_VERSION }}
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'Bump s6 overlay to version ${{ env.NEW_S6_OVERLAY_VERSION }}'
          add: '${{ env.CONFIG_FILE }}'

      - name: Create Dockerfiles
        shell: bash
        run: ./create_dockerfiles.sh ${{ env.NEW_S6_OVERLAY_VERSION }} ${{ env.NEW_DUPLICACY_VERSION }} ${{ env.GIT_BRANCH }}

      - name: Commit changes in Dockerfile x86-64 target
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'Commit changes in Dockerfile x86-64 target'
          add: 'Dockerfile'

      - name: Commit changes in Dockerfile armhf target
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'Commit changes in Dockerfile armhf target'
          add: 'Dockerfile.target-armhf'

      - name: Commit changes in Dockerfile aarch64 target
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'Commit changes in Dockerfile aarch64 target'
          add: 'Dockerfile.target-aarch64'

  build:
    name: Build docker images
    needs: update_config_file
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: amd64,arm64,arm,386

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
 
      - name: Build and push x86-64 target
        if: ${{ env.GIT_BRANCH }} == 'main'
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          file: Dockerfile
          push: true
          tags: ${{ github.repository }}:latest

      - name: Build and push armhf target
        if: ${{ env.GIT_BRANCH }} == 'main'
        uses: docker/build-push-action@v2
        with:
          platforms: linux/arm/v7
          file: Dockerfile.target-armhf
          push: true
          tags: ${{ github.repository }}:latest

      - name: Build and push aarch64 target
        if: ${{ env.GIT_BRANCH }} == 'main'
        uses: docker/build-push-action@v2
        with:
          platforms: linux/arm64
          file: Dockerfile.target-aarch64
          push: true
          tags: ${{ github.repository }}:latest

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2.4.2
        if: ${{ env.GIT_BRANCH }} == 'main'
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ github.repository }}
